<!-- Components/Rows -->
@using Components
@using Wordle.Model
@using Wordle.ViewModel.Classes

@inject GameManager gameManager

<div class="row comp">    
    @for(int i = 0; i < gameManager.NumberColumns; i++)
    {
        //Set background color of square. b = black; g = green; o = orange
        CssBackground.Add("b");
        <Square RowIndex=@RowIndex ColumnIndex=@i OnRowFinished="RowFinished" CssClasses="@CssBackground[i]" RowRef=@squareRefs/>
    }
@*
    @for(int i = 0; i < 5; i++)
    {
        int sqNumber = i;
        <Square @key=sqNumber @onkeydown=KeyDown/>
    }*@
</div>

<style scoped>
    .row {
        margin: 0 auto;
        background-color: inherit;
        width: 100%;
        height: 100%;
    }
</style>

@code {
    [Parameter]
    public int RowIndex { get; set; }

    private List<string> CssBackground = new List<string>();

    public ElementReference[] squareRefs = new ElementReference[5];

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //await squareRefs[0].FocusAsync();
        }
    }

    private void RowFinished()
    {
        Console.WriteLine("row finished");

        for (int i = 0; i < gameManager.NumberColumns; i++)
        {
            CssBackground[i] = gameManager.CheckRow(RowIndex, i);
        }
    }
}
