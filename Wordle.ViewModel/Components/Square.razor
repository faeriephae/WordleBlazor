<!-- Components/Square -->
@using Wordle.Model
@using Wordle.ViewModel.Classes
@inject GameManager gameManager

<!-- HTML -->
<input class="square @CssClasses" @onkeyup="@OnKeyUpHandler" @bind="InputText" @bind:event="oninput" onkeydown="return /[a-z]/i.test(event.key)" maxlength="1" @ref="RowRef[ColumnIndex]" />

<!-- CSS -->
<style scoped>
    .square {
        background-color: rgba(19, 19, 19, 0.79);
        border: none;
        box-sizing: border-box;
        width: 75px;
        height: 75px;
        margin: 2px 2px 2px 3px;
        font-size: 30px;
        text-align: center;
        vertical-align: middle;
        color: white;
        border: 2px solid rgba(80, 80, 80, 1);
        cursor: pointer;
        width: 75px;
        text-transform: uppercase;
        outline: none;
        caret-color: transparent;
    }

    .g {
        background-color: #538d4e;
    }

    .o {
        background-color: #f7da21;
    }

    .b {
        background-color: inherit;
    }
</style>

<!-- CODE -->
@code {
    [Parameter]
    public int RowIndex { get; set; }

    [Parameter]
    public int ColumnIndex { get; set; }

    [Parameter]
    public string? CssClasses { get; set; }

    [Parameter]
    public EventCallback OnRowFinished { get; set; }

    [Parameter]
    public ElementReference[] RowRef { get; set; }

    private string? InputText { get; set; } = "";

    private async Task RowFinished()
    {
        await OnRowFinished.InvokeAsync();
    }

    //@9g cleanup + comment
    private async void OnKeyUpHandler( KeyboardEventArgs e )
    {
        Console.WriteLine( "1: " + InputText );

        //comment please
        if( ColumnIndex == gameManager.NumberColumns - 1 && InputText != string.Empty && e.Key == "Enter" )
        {
            await RowFinished();

            ////go to first column of next row
            //if (gameManager.CheckRow(RowIndex)[gameManager.NumberColumns - 1] == "g")
            //{
            //    CssClasses = "g";
            //}

            //if (RowIndex < gameManager.NumberRows - 1)
            //{
            //gameManager.FocusNextSquare(RowIndex + 1, 0);
            //}
            //foreach (string item in gameManager.Field)
            //{
            //    Console.WriteLine(item);
            //}

        }
        else if( InputText.Length == 1 )
        {
            //only cast ToUpper if InputText is not empty to prevent
            gameManager.Field[ RowIndex, ColumnIndex ] = InputText != "" ? InputText.ToUpper() : "";

            if( ColumnIndex < 4 )
            {
                //go to next column
                //gameManager.FocusNextSquare(RowIndex, ColumnIndex + 1);
                await RowRef[ ColumnIndex + 1 ].FocusAsync();
            }
        }

        if( e.Key == "Backspace" && ColumnIndex > 0 )
        {
            //gameManager.FocusNextSquare(RowIndex, ColumnIndex - 1);
        }

        Console.WriteLine( "3: " + e.Key );
    }
}