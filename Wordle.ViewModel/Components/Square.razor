<!-- Components/Square -->
@using Wordle.Model
@using Wordle.ViewModel.Classes
@inject GameManager gameManager

<input class="square @CssClasses" @onkeyup="@OnKeyUpHandler" @bind="InputText" @bind:event="oninput" onkeydown="return /[a-z]/i.test(event.key)" maxlength="1" @ref="RowRef[ColumnIndex]"/>

<style scoped>
    .square {
        background-color: rgba(19, 19, 19, 0.79);
        border: none;
        box-sizing: border-box;
        width: 75px;
        height: 75px;
        margin: 2px 2px 2px 3px;
        font-size: 30px;
        text-align: center;
        vertical-align: middle;
        color: white;
        border: 2px solid rgba(80, 80, 80, 1);
        cursor: pointer;
        width: 75px;
        text-transform: uppercase;
        outline: none;
        caret-color: transparent;
    }

    .g {
        background-color: green;
    }

    .o {
        background-color: orange;
    }

    .b {
        background-color: inherit;
    }
</style>

@code {
    [Parameter]
    public int RowIndex { get; set; }
    [Parameter]
    public int ColumnIndex { get; set; }

    private string? InputText { get; set; } = "";

    [Parameter]
    public string? CssClasses { get; set; }

    //Used to call method from Row in which this Square is embedded
    [Parameter]
    public EventCallback OnRowFinished{ get; set; }

    [Parameter]
    public ElementReference[] RowRef{ get; set; }

    //Call method from OnRowFinished parameter
    private async Task RowFinished()
    {

        await OnRowFinished.InvokeAsync();
    }

    private async void OnKeyUpHandler(KeyboardEventArgs e)
    {
        Console.WriteLine("1: " + InputText);
        if (ColumnIndex == gameManager.NumberColumns - 1 && InputText != string.Empty && e.Key == "Enter")
        {
            //Go to next Row if user pressed enter in last Sqaure of the Row
            await RowFinished();
        }
        //Is the input a single letter?
        else if (InputText.Length == 1)
        {
            //only cast ToUpper if InputText is not empty to prevent
            gameManager.Field[RowIndex, ColumnIndex] = InputText != "" ? InputText.ToUpper() : "";

            if (ColumnIndex < 4)
            {
                //go to next column
                await RowRef[ColumnIndex + 1].FocusAsync();
            }
        }
        //ToDo: logic for deleting characters
        if (e.Key == "Backspace" && ColumnIndex > 0)
        {
            throw new NotImplementedException();
        }
    }
}